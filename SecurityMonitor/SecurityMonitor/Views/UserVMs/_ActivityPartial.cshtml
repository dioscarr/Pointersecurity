@*@model IEnumerable<SecurityMonitor.Models.ActivityLog>*@
@model PagedList.IPagedList<SecurityMonitor.Models.ActivityLog>



<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div class="container">
    <div class="row col-md-12">
        <div>
            @using (Html.BeginForm("userprofile", "UserVMs", FormMethod.Get))
            {  <b> Search By:</b>
                @Html.RadioButton("SearchBy", "Function", true)<text>Function</text>
                @Html.RadioButton("SearchBy", "Date")<text>Date</text>
                <br />
                @Html.TextBox("Search")<input type="submit" value="Search" />
            }
        </div>
    </div>
    <div class="row col-md-12">
        <div>
            page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount

            @if (Model.HasPreviousPage)
            {
                <ul class="pagination pagination-sm">
                    <li> @Html.ActionLink("First", "Userprofile", new { page = 1 })</li>

                    <li> @Html.ActionLink("Prev", "Userprofile", new { page = Model.PageNumber - 1 })</li>
                </ul>

            }
            else
            {
                <ul class="pagination pagination-sm">
                    <li><a href="#">First</a></li>
                    <li><a href="#">Prev</a></li>
                </ul>

            }

            <ul class="pagination pagination-sm">
                @for (var item = 1; item <= @Model.PageCount; item++)
                {
                    <li><a href="Userprofile?page=@item"> @item</a></li>
                }

            </ul>

            @if (Model.HasNextPage)
            {
                <ul class="pagination pagination-sm">
                    <li> @Html.ActionLink("Next", "Userprofile", new { page = Model.PageNumber + 1 })</li>

                    <li>@Html.ActionLink("Last", "Userprofile", new { page = Model.PageCount })</li>
                </ul>
            }
            else
            {
                <ul class="pagination pagination-sm">
                    <li><a href="#">Next</a></li>
                    <li><a href="#">Last</a></li>
                </ul>
            }
        </div>
    </div>
    <div class="row col-md-12">
        <table class="table">
            <tr>
                
                <th>
                    @Html.DisplayNameFor(model => model.First().FunctionPerformed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().DateCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Message)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    
                    <td>
                        @Html.DisplayFor(modelItem => item.FunctionPerformed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Message)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    </td>
                </tr>
            }

        </table>
    </div>
    <div class="row col-md-12">
        <div>
            page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.PageCount

            @if (Model.HasPreviousPage)
            {
                <ul class="pagination pagination-sm">
                    <li> @Html.ActionLink("First", "Userprofile", new { page = 1 })</li>
                    <li> @Html.ActionLink("Prev", "Userprofile", new { page = Model.PageNumber - 1 })</li>
                </ul>

            }
            else
            {
                <ul class="pagination pagination-sm">
                    <li><a href="#">First</a></li>
                    <li><a href="#">Prev</a></li>
                </ul>

            }

            <ul class="pagination pagination-sm">
                @for (var item = 1; item <= @Model.PageCount; item++)
                {
                    <li><a href="Userprofile?page=@item">@item</a></li>
                }

            </ul>


            @if (Model.HasNextPage)
            {
                <ul class="pagination pagination-sm">
                    <li> @Html.ActionLink("Next", "Userprofile", new { page = Model.PageNumber + 1 })</li>
                    <li>@Html.ActionLink("Last", "Userprofile", new { page = Model.PageCount })</li>
                </ul>
            }
            else
            {
                <ul class="pagination pagination-sm">
                    <li><a href="#">Next</a></li>
                    <li><a href="#">Last</a></li>
                </ul>
            }
        </div>
    </div>

</div>