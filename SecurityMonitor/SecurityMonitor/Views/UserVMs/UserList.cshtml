@model IEnumerable<SecurityMonitor.Models.EntityFrameworkFL.AspNetUser>

@{
    ViewBag.Title = "Pointer Security";
}

<h2>Users Management Dashboard</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            <p>Roles</p>
        </th>
        <th>
           
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>

            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
           
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        
        <td>
            <p id=@item.Id>No Role Assign</p>
        </td>
        <td>
            @{//Roles Dropdown
                IEnumerable<SelectListItem> ListOfRoles = ViewBag.ListOfRoles;
                @Html.DropDownListFor(model => item.AspNetRoles, ListOfRoles,
"Choose Role", new { @class = "form-control  data-dropdown-role-class ", data_dropdown_role = item.Id, })
                
                @Html.ValidationMessageFor(model => item.AspNetRoles)
            }

        </td>
        <td>
            <button type="button" class="btn btn-default datattribute-user" data-user-value="@item.Id">Save</button>
            <button type="button" class="btn btn-default datattribute-user" data-user-value="@item.Id">Details</button>
            <button type="button" class="btn btn-success datattribute-user" data-user-value="@item.Id">Edit</button>
            <button type="button" class="btn btn-danger datattribute-user" data-user-value="@item.Id">Delete</button>
        </td>
    </tr>
}

</table>
@section scripts
{
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
  


   <script type="text/javascript">
       $(document).ready(function () {
           //======Role selector=====
          
           $('select').on("change", function () {
               //grabs the value assigned to  data_dropdown_role attribute
               var data_attr_dropdown = $(this).attr('data-dropdown-role');
               //grabs the value from the option.. value attr
               var option_value_attr = $('option:selected', this).attr('value');
               var option_Text_attr = $('option:selected', this).text();
               
               //=======actionResultCall===========
               if (option_value_attr != "")
               {//you are inside 
                   $.getJSON("/UserVMs/UpdateRole/", { UserID: data_attr_dropdown, RoleID: option_value_attr }, function (data) {
                       $.each(data, function (i, Model) {
                           // Model has two properties. value and text. the Model can contain 1 or more rows
                           if(Model.Text == option_Text_attr)
                           { 
                               $('#' + data_attr_dropdown).html(Model.Text);
                           }
                       });
                       //Good place to assign the return data to the Role collumn
                   });

               }
           });
           $('.datattribute-user').on('click', function () {
               var items_id = $(this).attr('data-user-value');
               alert(items_id);

           });

           //<=================Call Action that return Json data=======>
           $('.data-dropdown-role-class').change(function () {

              
               if ($('.data-dropdown-role-class > option:selected').attr("value") != "undefined") {

                   
                  
               }
           });

       });


  

    </script>
    
        }