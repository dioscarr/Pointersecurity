@model SecurityMonitor.Models.ManageUsersProfileVM
       @using SecurityMonitor.Models;
@using Doormandondemand
@{
    ViewBag.Title = "ManageUsersProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*self.NewFullName = ko.observable();
    self.NewEmail = ko.observable();
    self.NewPhone = ko.observable();
    self.UserName = ko.observable();
    self.NewPassword = ko.observable();
    self.NewConfirmPassword = ko.observable();*@




<div class="row">

   @{ var BInfo = (Buildings)@ViewBag.BuildingInfo;}

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 headerDefault">
        <ol class="breadcrumb" style="line-height:20px;" id="clientbreadcrumbid">
            <li>@Html.ActionLink("Home", "index", "Home", null, new { @class = "breadcrumblink" })</li>
            <li>@Html.ActionLink("Client's Page", "ClientHome", "building", null, new { @class = "breadcrumblink" })</li>
            <li>@Html.ActionLink("Client's Profile", "ClientProfile", "building", new { ClientID = BInfo.ClientID }, new { @class = "breadcrumblink" })</li>
            <li> @Html.ActionLink((string)@BInfo.BuildingName, "BuildingProfile", "building", new { buildingID = @Model.BuildingID }, new { @class = "breadcrumblink" })</li>
            <li>
                Create New Staff
        </li>
    </ol>
</div>
</div>


<div class="row ">



    
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="border:1px solid lightgrey; height:400px; background:#f5f3f3;">
        

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12  text-center">
                <p style="font-size:20px; padding-top:20px;">Create New Building Staff</p>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <input type="text" class="form-control newstafffield" placeholder="Full Name" name=" FullName" data-bind="value:NewFullName" />
                    
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <input type="text" class="form-control newstafffield" placeholder="Email" name=" Email" data-bind="value:NewEmail" />
                <div id="validateemailid"></div>
            </div>
           
            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <input type="text" class="form-control newstafffield" placeholder="Phone" name="Phone" data-bind="value:NewPhone" />
          
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <input type="text" class="form-control newstafffield" placeholder="UserName" name="UserName" data-bind="value:UserName" />
                
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <input type="text" class="form-control newstafffield" placeholder="Password" name="Password" data-bind="value:NewPassword" />
               
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <input type="text" class="form-control newstafffield" placeholder="ConfirmPassword" name="ConfirmPassword" data-bind="value:NewConfirmPassword" />
              
            </div>
           
          
           
           

            @Html.Hidden("BuildingID", Model.BuildingID)


            




        </div>
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">


        
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 background-white ">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center">

                <h4>Add Permissions</h4>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" data-bind="foreach:Permissions">
                <!--Add Module section-->
                <section style="margin:50px 0 50px 0;">
                    <!--vCard starts-->
                    <div class="col-md-3 col-lg-3 col-sm-3 col-xs-3   paddingBottom20px nopadding">
                        <!--header starts-->
                        <section class=" col-md-12 text-center clientboxrow ">
                            <section class=" boxhead hollow5 col-md-12 col-lg-12 col-sm-12 col-xs-12 nopadding">
                                <div class=" boxname col-lg-12 col-md-12 col-sm-12 col-xs-12" data-bind="text:Name, click:removePermission">

                                </div>
                            </section>
                        </section>
                    </div>
                </section>
            </div>
            </div>




            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 " style="border:1px solid lightgrey;  background:#f5f3f3;">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 nopadding text-center">

                    <h4>Added Permissions</h4>
                </div>
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" data-bind="foreach:AddedPermissions">
                    <!--Add Module section-->
                    <section style="margin:50px 0 50px 0;">
                        <!--vCard starts-->
                        <div class="col-md-3 col-lg-3 col-sm-3 col-xs-3   paddingBottom20px nopadding">
                            <!--header starts-->
                            <section class=" col-md-12 text-center clientboxrow dragme " >
                                <section class=" boxhead hollow5 col-md-12 col-lg-12 col-sm-12 col-xs-12 nopadding ">
                                    <div class=" boxname col-lg-12 col-md-12 col-sm-12 col-xs-12" data-bind="text:Name, click:removeAddedPermission"></div>
                                </section>
                            </section>
                        </div>
                    </section>
                </div>
            </div>

        </div>
    
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 background-white" style="min-height:100px;">
        
            <div>
                <button type="button" class="btn btn-default" data-bind="click:addnewBuildingStaff">Add Staff</button>
                <button type="submit" class="btn btn-default">Cancel</button>
                
                <br />
                <button id='upClick' type="button" class="btn btn-link">Edit Users Permission(s)</button>
            </div>
        </div>
    </div>
    
    
        @*<div class="col-md-12" style="background: #f5f3f3;border:1px solid lightgrey; ">
            <div class="row ">
                <div class="col-md-12" style="background: #f5f3f3; border-right:1px solid lightgrey; ">

                    <div class="col-md-12 text-center permission " style="padding-top:25px; ">
                        Modules Permissions
                    </div>
                    <div class="col-md-12 text-center permission hollow3">
                        Repair:
                        @Html.CheckBoxFor(c => c.permission.permission.Repair, new { })

                    </div>
                    <div class="col-md-12 text-center permission hollow3">
                        Acess Control:
                        @Html.CheckBoxFor(c => c.permission.permission.Accesscontrol)

                    </div>
                    <div class="col-md-12 text-center permission hollow3">
                        News:
                        @Html.CheckBoxFor(c => c.permission.permission.News)

                    </div>
                    <div class="col-md-12 text-center permission hollow3">
                        Events:
                        @Html.CheckBoxFor(c => c.permission.permission.Events)

                    </div>
                    <div class="col-md-12 text-center permission hollow3">
                        Legal Docs:
                        @Html.CheckBoxFor(c => c.permission.permission.LegalDocs)*@

                    @*</div>
                    <div class="col-md-12 text-center permission hollow3">
                        Delivery:
                        @Html.CheckBoxFor(c => c.permission.permission.Delivery)

                    </div>

                    <div class="col-md-12 text-center permission " style="padding-top:25px; ">
                        Building Permission
                    </div>
                    <div class="col-md-12 text-center permission hollow3">
                        Contact Book:
                        @Html.CheckBoxFor(c => c.permission.permission.Contactbook)

                    </div>*@
                    @*<div class="col-md-12 text-center permission hollow3">
                        Apartments:
                        @Html.CheckBoxFor(c => c.permission.permission.Apartment)

                    </div>*@
                    @*<div class="col-md-12 text-center permission hollow3">
                        Basic Building Features:
                        @Html.CheckBoxFor(c => c.permission.permission.BasicFeatures)*@

                    @*</div>
                </div>*@
                <!--bUILDING pERMISSION-->
                @*<div class="col-md-6" style="background: #f5f3f3;  ">*@


                @*</div>


            </div>

        </div>*@

    



</div>
    </div>

<div class="row EditpermissionSection" style="display:none;">
    <div class="col-md-offset-1 col-md-10">
        <p style="padding-top:30px;">To Edit user permission please follow these steps.</p>
        <ul>
            <li>Select the " Change Current permision Radio Button"</li>
            <li>Check or Uncheck the permission to either added or remove it</li>
            <li>when all changes are completed click "Save All Changes" button</li>
        </ul>
    </div>
</div>
<div class="row EditpermissionSection" style="height:600px; margin-top:5px; display:none;">


    <div class="col-md-offset-1 col-md-4" style=" margin-top:20px;  border:1px solid lightgrey;">
        <div class="row SettingBPUsers   " style=" background:#f5f3f3; padding:25px 0;">
            <div class="col-md-6"><p style="font-size:14px;  display:inline; padding-left:15px; ">User Name</p></div>
            <div class="col-md-6" style="padding-left:30px;">
                Change Properties
            </div>
        </div>
        @{ List<BuildingUser> ObjBU = (List<BuildingUser>)ViewBag.BuildingUsers;
       

            <div class="row scrollable" style="background:white; height:350px; border-top:1px solid lightgrey; border-bottom:1px solid lightgrey; padding-bottom:30px;">
                @if (ObjBU.Count >= 0)
                {
                    foreach (var item in ObjBU)
                    {
                        <div class="col-md-12 SettingBPUsers  hollow3 shadow3" style="  background:#f5f3f3; border:1px solid lightgrey;  margin-top:5px; margin-bottom:5px;">
                            <div class="col-md-6"><p style="font-size:14px;  display:inline; padding-left:15px;">@item.FirstName @item.LastName </p></div>
                            <div class="col-md-6" style="padding-left:30px;">
                                @Html.RadioButton("permission", false, new { data_chkID = @item.UserID, @class = "checkbox mycheckbosex", @style = "display:inline;" })
                                Edit 
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p> no User assign yet!</p>

                }
            </div>
    <div class="row" style=" border:1px solid lightgrey; height:90px;  border-top:none; background: #f5f3f3;">

    </div>
            <div class="row">
                <button type="button" class=" col-md-12 btn btn-success" style="height:50px;" id="EditClearAllid">
                    Clear All
                </button>

            </div>
}
    </div>
    @{using (@Html.BeginForm("EditBUPermissions", "Management"))
    {
        <div class="col-md-6" style=" margin-top:20px; height:500px;">
            <div class="row " style="background: #f5f3f3;border:1px solid lightgrey; ">
                <div class="col-md-6" style="background: #f5f3f3;border:1px solid lightgrey; ">

                    <div class="col-md-12 text-center permission " style="padding-top:25px;  ">
                        Modules Permissions
                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        Repair:
                        @Html.CheckBoxFor(c => c.permission.permission.Repair, new { id = "EditRepairid", @class = "chk" })

                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        Acess Control:
                        @Html.CheckBoxFor(c => c.permission.permission.Accesscontrol, new { id = "EditACid", @class = "chk" })

                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        News:
                        @Html.CheckBoxFor(c => c.permission.permission.News, new { id = "EditNewsid", @class = "chk" })

                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        Events:
                        @Html.CheckBoxFor(c => c.permission.permission.Events, new { id = "EditEventsid", @class = "chk" })

                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        Legal Docs:
                        @Html.CheckBoxFor(c => c.permission.permission.LegalDocs, new { id = "EditLDid", @class = "chk" })

                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        Delivery:
                        @Html.CheckBoxFor(c => c.permission.permission.Delivery, new { id = "EditDeliveryid", @class = "chk" })

                    </div>
                </div>
                <!--bUILDING pERMISSION-->
                <div class="col-md-6" style="background:#f5f3f3;border:1px solid lightgrey; padding-bottom:210px; ">

                    <div class="col-md-12 text-center permission " style="padding-top:25px; ">
                        Building Permission
                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        Contact Book:
                        @Html.CheckBoxFor(c => c.permission.permission.Contactbook, new { id = "EditCBid", @class = "chk" })

                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        Apartments:
                        @Html.CheckBoxFor(c => c.permission.permission.Apartment, new { id = "EditApartmentid", @class = "chk" })

                    </div>
                    <div class="col-md-12 text-center permission hollow3 shadow3" style="padding-top:25px; margin:5px 0; border:1px solid lightgrey; ">
                        Basic Building Features:
                        @Html.CheckBoxFor(c => c.permission.permission.BasicFeatures, new { id = "EditBasicid", @class = "chk" })

                    </div>

                </div>



            </div>
            <div class="row text-center">
                <div class="col-md-12 ">
                    @Html.Hidden("BuildingID", Model.BuildingID)
                    @Html.Hidden("UserID")
                    <button type="submit" class="btn btn-success row" style=" height:50px; border-top-left-radius:0px; border-top-right-radius:0px;">Save All Changes</button>
                </div>
            </div>

        </div>
       


    }
    }
</div>
@*<div class="row" id="myURL">
    <div class="alert alert-success alert-success" role="alert" style="display:none;">
        <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>

    </div>

</div>*@





@section scripts
{
<script src="~/Scripts/TheLibrary/TimeJS.js"></script>
    <script src="~/Scripts/jquery-2.1.3.min.js"></script>
<script src="~/Scripts/jquery-ui-1.11.4.min.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/knockout-3.1.0.js"></script>

<script src="~/Scripts/BuildingStaffMgr.js"></script>
   <script type="text/javascript">
       $(document).ready(function () {

           $("#upClick").on("click", function () {
               $('.EditpermissionSection').show();
               $('html, body').animate({ scrollTop: "1000px" });

           });   
           //edit permissions
           $('.mycheckbosex').change(function () {

               if ($(this).is(':checked') == true) {   
                   

                   var data_chkID = $(this).attr('data-chkID');
                   //set UserID on hidden 
                   $('#UserID').val(data_chkID);
                   //function
                   resetcheckboxes();

                   $.ajax({
                       type: "GET",
                       data: { BuildingIDUserID: data_chkID },
                       contentType: "application/json; charset=utf-8",
                       dataType: "json",
                       url: "/Management/Loadingbuildinguserpermissions/",
                       success: function (jsonData) {                      
                           var i = 0;
                           for (var item in jsonData) {
                              
                               switch (jsonData[i])
                               {
                                   case "Repair":
                                       $('#EditRepairid').prop("checked",true);
                                
                                       break;
                                   case "Delivery":
                                       $('#EditDeliveryid').prop("checked", true);
                                    
                                       break;
                                   case "News":
                                       $('#EditNewsid').prop("checked", true);
                                   
                                       break;
                                   case "AccessControl":
                                       $('#EditACid').prop("checked", true);
                                    
                                       break;
                                   case "Apartment":
                                       $('#EditApartmentid').prop("checked", true);
                                     
                                       break;
                                   case "Contactbook":
                                       $('#EditCBid').prop("checked", true);
                                   
                                       break;
                                   case "Events":
                                       $('#EditEventsid').prop("checked", true);
                                    
                                       break;
                                   case "LegalDocs":
                                       $('#EditLDid').prop("checked", true);
                                    
                                       break;
                               }
                               i++;
                           }
                       }
                   });

               }
               else {
                   resetcheckboxes();
                   //$('.permissiontable').hide();
                   //$('#map').show(1000);
               }
           });

           //Clear All 
           $('#EditClearAllid').on("click", function()
           {
               $('.mycheckbosex').prop("checked", false);
               resetcheckboxes();
           });

           //$('.chk').change(function () {
           //    $('#myURL').html('<div class="alert alert-success alert-success" role="alert">' +
           //    '<button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>' +
           //    'this is a test message' +
           //'</div>');


           //    $('#myURL').fadeOut(2000);
           //});

       });

      
       //reset checkboxes
       function resetcheckboxes() {
           $('#EditRepairid').prop("checked", false);
           $('#EditDeliveryid').prop("checked", false);
           $('#EditNewsid').prop("checked", false);
           $('#EditACid').prop("checked", false);
           $('#EditApartmentid').prop("checked", false);
           $('#EditCBid').prop("checked", false);
           $('#EditEventsid').prop("checked", false);
           $('#EditLDid').prop("checked", false);
       }



       $(function () {


           $(".dragme").draggable();

          var viewModel=function(){
              self = this;

              //addUser 
              self.NewFullName = ko.observable();
              self.NewEmail = ko.observable();
              self.NewPhone = ko.observable();
              self.UserName = ko.observable();
              self.NewPassword = ko.observable();
              self.NewConfirmPassword = ko.observable();
              //Permissions
              self.NewRepair = ko.observable(false);
              self.NewDelivery = ko.observable(false);
              self.NewAccessControl = ko.observable(false);
              self.NewEvents = ko.observable(false);
              self.NewNews = ko.observable(false);
              self.NewLegalDocs = ko.observable(false);


               var data = [{ Name: "Repair" },
                   { Name: "Delivery" },
               { Name: "Acess Control" },
               { Name: "News" },
               { Name: "Events" },
               { Name: "Legal Docs" },
               { Name: "Building Permission" },
               { Name: "Contact Book" },
               { Name: "Apartments" }];
               self.Permissions = ko.observableArray(data);
               self.AddedPermissions = ko.observableArray();
               

              //Add permission to Builsing Staff
               self.removePermission = function (task) {
                   
                   self.Permissions.remove(task);
                   self.AddedPermissions.push(task);
                   settingup(task.Name);

                  
                  // alert(JSON.stringify( self.Permissions()));
               };


               function settingup(task)
               {

                   switch (task)
                   {
                       case "Repair":
                           self.NewRepair(true);
                           break;
                       case "Delivery":
                           self.NewDelivery(true);
                           break;
                       case "Acess Control":
                           self.NewAccessControl(true);
                           break;
                       case "Events":
                           self.NewEvents(true);
                           break;
                       case "News":
                           self.NewNews(true);
                           break;
                       case "Legal Docs":
                           self.NewLegalDocs(false);
                           break;
                   };
               
               };

              //remove added permission from buildingstaff deck
               self.removeAddedPermission = function (task) {
                  
                   self.AddedPermissions.remove(task);
                   self.Permissions.push(task);
                   settingoff(task.Name);

                  
                   // alert(JSON.stringify( self.Permissions()));
               };

               function settingoff(task){
                   switch (task) {
                       case "Repair":
                           self.NewRepair(false);
                           break;
                       case "Delivery":
                           self.NewDelivery(false);
                           break;
                       case "Acess Control":
                           self.NewAccessControl(false);
                           break;
                       case "Events":
                           self.NewEvents(false);
                           break;
                       case "News":
                           self.NewNews(false);
                           break;
                       case "Legal Docs":
                           self.NewLegalDocs(false);
                           break;
                   }
               };           

            

               self.addnewBuildingStaff = function () {
                 
                   $.ajax({
                       type: "POST",
                       data: {
                           BuildingID: "@Model.BuildingID",
                           Repair: "true",
                           Delivery: self.NewDelivery(),
                           Accesscontrol: self.NewAccessControl(),
                           News: self.NewNews(),
                           Events: self.NewEvents(),
                           LegalDocs: self.NewLegalDocs(),
                           FullName: self.NewFullName(),
                           Email:self.NewEmail(),
                           Phone:self.NewPhone(),
                           Username:self.UserName(),
                           Password:self.NewPassword(),
                           ConfirmPassword:self.NewConfirmPassword()
                       },
                       dataType: "json",
                       url: "/Management/AddUser/",
                       success: function (jsonData) {

                           self.NewFullName("");
                           self.NewEmail("");
                           self.NewPhone("");
                           self.UserName("");
                           self.NewPassword("");
                           self.NewConfirmPassword("");
                           //Permissions
                           self.NewRepair(false);
                           self.NewDelivery(false);
                           self.NewAccessControl(false);
                           self.NewEvents(false);
                           self.NewNews(false);
                           self.NewLegalDocs(false);

                       }
                   });
               };





              self.NewEmail.subscribe(function (input) {
                  var result = isValidEmailAddress(input);
                  if (result == true) {
                      $.ajax(
                          {
                              type: "GET",
                              url: '/building/Searchforusername/',
                              dataType: "json",
                              data: { search: input },
                              success: function (data) {

                                  var jsonresult = JSON.stringify(data.Data);// Json.stringify make an object into a json string
                                  //alert(jsonresult);
                                  var TrkPkgs = JSON.parse(jsonresult); //JSON.parse makes a json string into a json object example obj.FirstName
                                  for (var i = 0; i < TrkPkgs.length; i++) {
                                      if (TrkPkgs[i].Email == input) {
                                          $('#validateemailid').html("<span>This email address is already in use");
                                      }
                                  }
                              }
                          });
                  }
                  else if (input == "") {
                      $('#validateemailid').html("");
                  }
                  else {
                      $('#validateemailid').html("<span>invalid Email Address!");
                  }
                  console.log(input + " ");
              });




           };


           ko.applyBindings(viewModel);


       });
      

    </script>
    
    
    
    
    }





