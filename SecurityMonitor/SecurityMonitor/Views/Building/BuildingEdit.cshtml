@model SecurityMonitor.Models.EntityFrameworkFL.Buildings

@{
    ViewBag.Title = "BuildingEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">


        <div class="col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows">
                @Html.LabelFor(model => model.BuildingName, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                @Html.EditorFor(model => model.BuildingName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows">

                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows">

                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows">
                @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows">
                @Html.LabelFor(model => model.NumberOfApartment, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                @Html.EditorFor(model => model.NumberOfApartment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfApartment, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows">
                @Html.LabelFor(model => model.BuildingPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                @Html.EditorFor(model => model.BuildingPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BuildingPhone, "", new { @class = "text-danger" })
            </div> 
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows">
                @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                @Html.EditorFor(model => model.Manager, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ClientEditrows"></div>
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ClientEditrows">
                <input type="submit" value="Save" class="btn btn-default form-control " />
            </div>
            </div>
    </div>


    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(c=>c.ClientID)
}

<div>
    @Html.ActionLink("Back to Building List", "BuildingIndex", new { ClientID = Model.ClientID })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
