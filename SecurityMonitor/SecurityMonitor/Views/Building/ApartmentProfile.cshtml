@model IEnumerable<SecurityMonitor.Models.ApartmentVM>
@using Doormandondemand;
@using SecurityMonitor.Models;
@{
    ViewBag.Title = "ApartmentProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var buildinginfo = (BuildingInfoVM)Session["Building"];
    @Html.Hidden("BuildingID", buildinginfo.BuildingID, new {id="buildingid",@data_BuildingID =buildinginfo.BuildingID })
    @Html.Hidden("AptID", buildinginfo.AptID, new {id="aptid", @data_AptID = buildinginfo.AptID })

}

<!-- Small modal -->


<div class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content"> 
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Mail Notification</h4>
            </div>   
            <div class="modal-body">
                <p> 
                    The Mailroom just receive                
                    <span data-bind="text:Packagecount"></span> 
                    package(s) for
                    <span data-bind="text:FName"></span>
                    <span data-bind="text:LName"></span>.
                    The Information about the package(s) is bellow.
                    <span data-bind="foreach: Trackings">
                        <br/>
                       <span>Tacking#: </span> <span data-bind="text:name"></span>
                    </span>
                     
                </p>
      </div>
        </div>
    </div>
</div>

<!--========================Top section====================-->
<div class="row " style="height:500px; background-image:url(/img/whiteinterior.jpg); background-size:cover; background-position-y:center;">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center hollow3 whity" style=" padding-top:30px; padding-bottom:30px;" 
    onclick="location.href = '@Url.Action("buildingProfile", "Building", new { buildingID = @buildinginfo.BuildingID })'">
        <span style="color:white;">Return To Building</span>

    </div>
    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4    " style="padding-top:0px; padding-bottom:0px;">
        <h1 > @buildinginfo.BuildingName</h1>
        <br /><span class="" style="color:white; font-size:20px;">@buildinginfo.Address</span>
        <br /><span class="" style="color:white;">@buildinginfo.City @buildinginfo.States @buildinginfo.ZipCode </span>
    </div>
    <div class="col-lg-8 col-md-8 col-sm-8 col-xs-8  " style="height:178px;">

    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  " style="padding-top:50px;">
        <button type="button" class="btn btn-default "
                onclick="location.href = '@Url.Action("deleteApartment", "Building", new { ApartmentID = @buildinginfo.ID })'">
            Delete this Apartment
        </button>

        @foreach (var item in Model)
        {

            <button type="button" class="btn btn-default pull-right"
                    onclick="location.href = '@Url.Action("AddingTenant", "Building", new { apartmentID = @item.ID, BuildingID = @buildinginfo.ID })'">
                Add Tenant to this apartment
            </button>
        }
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center  whity ">
        @foreach (var item in Model)
        {
            <h1 style="font-size:170px; color:white; ">@Html.DisplayFor(modelItem => item.ApartmentNumber)</h1>
        }
    </div>
</div>

<!--=====================modules====================-->
<div class="row" style="height: 50px;">
    <span id="buildingdeliveryid" class="badge" style="color:white; background:green; margin:10px 0;">1</span>

</div>

<div class="row " style="padding-bottom:40px;">
    <!--=================Tenant==================-->
    <!--add tenant-->
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="border-top:1px solid lightgrey;">

    </div>
</div>

@foreach (Tenant item in ViewBag.tenant)
{
    <div class=" row  hollow3  " style="border-bottom:1px solid lightgrey; ">
        <!--tenant information-->
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6" style="height:200px;">

            <div class=" glyphicon glyphicon-user " style="font-size:40px; padding-top:10px; "></div>
            <button type="button" class="btn btn-link "
                    onclick="location.href = '@Url.Action("TenantEdit", "Building", new { TenantID = @item.ID })'">
                Edit
            </button>
            <br />
            <h4>@item.FirstName @item.LastName</h4><br />
            <div class="" style="position:relative; top:-15px;">
                Phone: @item.Phone <br />
                Created on @item.Created
                <br />


                <button type="button" class="btn btn-link " style="margin-left:-10px;"
                        onclick="location.href = '@Url.Action("TenantDelete", "Building", new { TenantID = @item.ID })'">
                    Remove this Tenant
                </button>
            </div>
        </div>
        <!--advance options-->
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6" style="height:160px;">



            <button type="button" class="btn btn-link" style="margin:9px;"
                    onclick="location.href = '@Url.Action("TenantRequest", "Building", new { TenantID = @item.ID, BuildingID = @buildinginfo.BuildingID,  })'">
                New Access Request
            </button>
            <br />
            <button type="button" class="btn btn-link" style="margin:9px;"
                    onclick="location.href = '@Url.Action("TenantDeliveryIndex", "Building", new { TenantID = @item.ID })'">
                Deliveries
            </button>
            <br />
            <button type="button" class="btn btn-link" style="margin:9px;"
                    onclick="location.href = '@Url.Action("TenantMessegeCenterIndex", "Building", new { TenantID = @item.ID })'">
                Message Center
            </button>
            <br />
            <button type="button" class="btn btn-link" style="margin:9px;"
                    onclick="location.href = '@Url.Action("RequestHistoryIndex", "Building", new { TenantID = @item.ID })'">
                History
            </button>


        </div>

        <!--========================Request box===============================-->
        @*<canvas id="doughNutChartLoc@(item.ID)" data-tenantid="@item.ID" class="mygraph" height="100" width="100" ></canvas>*@
    </div>
}

<!--=================tenant ends==================-->
 
@section scripts
{
     


  
<script src="~/Scripts/jquery-2.1.1.min.js"></script>
<script src="~/Scripts/knockout-3.1.0.js"></script>
<script src="~/Scripts/knockout.mapping-latest.js"></script>
<script src="~/Scripts/jquery.signalR2.1.2.min.js"></script>

<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>

    @*<script src="~/Scripts/Chart.min.js"></script>*@
@*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>*@
@*<script src="~/Scripts/HighChart/highcharts.js"></script>
<script src="~/Scripts/HighChart/modules/exporting.js"></script>*@
   <script type="text/javascript">
    $(document).ready(function (e) {
       

       

        var viewModel = function () {

            var self = this;

            self.DeliveryData = ko.observable();
            self.Packagecount = ko.observable();
            self.FName = ko.observable();
            self.LName = ko.observable();
            self.Phone = ko.observable();
            self.Trackings = ko.observableArray();


            $(function () {
                // Reference the auto-generated proxy for the hub.
                //Notification
                var Notification = $.connection.notificationsHub;

                // Create a function that the hub can call back to display messages.
                Notification.client.incomingPackageNotification = function (BuildingID, ApartmentID, jsonObj)
                {
                    //incoming here 

                    var jsonresult = JSON.stringify(jsonObj.Data);// Json.stringify make an object into a json string
                    var ReceiveCleanobj = JSON.parse(jsonresult); //JSON.parse makes a json string into a json object example obj.FirstName
                    var packagesCount = ReceiveCleanobj.Packages.length;
                    var CurrentBuildingID = $('#buildingid').attr('data-BuildingID');
                    var CurrentAptID = $('#aptid').attr('data-AptID');

                    // testing Data 
                    console.log("current building id is: " + CurrentBuildingID);
                    console.log("current building id is: " + CurrentAptID);
                    console.log(" ");
                    console.log("ConnectionID, Receive from other client" + $.connection.hub.id);
                    console.log("For BuildingID: " + BuildingID + " and ApartmentID: " + ApartmentID);
                    if (CurrentBuildingID == BuildingID && CurrentAptID == ApartmentID)
                    {
                        self.FName(ReceiveCleanobj.FirstName);
                        self.LName(ReceiveCleanobj.LastName);
                        self.Phone(ReceiveCleanobj.Phone);
                        JSON.stringify
                        
                        for (var i = 0; i < packagesCount; i++) 
                        {
                            self.Trackings.push({ name: ReceiveCleanobj.Packages[i].Trackingnumber });                           
                        };
                        
                        self.Packagecount(packagesCount);
                        $('.modal').modal('show');


                        console.log("A package just arrived for this apartment!");
                        console.log("FirstName: " + ReceiveCleanobj.FirstName);
                        console.log("LastName: " + ReceiveCleanobj.LastName);
                        console.log("Phone: " + ReceiveCleanobj.Phone);
                        console.log("ApartmentNumber: " + ReceiveCleanobj.ApartmentNumber);
                        console.log("UserID: " + ReceiveCleanobj.UserID);
                        console.log("BuildingID: " + ReceiveCleanobj.BuildingID);
                        console.log("ApartmentID: " + ReceiveCleanobj.ApartmentID);
                        console.log("BuildingID: " + ReceiveCleanobj.BuildingID);
                        console.log("Address: " + ReceiveCleanobj.Address);
                        console.log("City: " + ReceiveCleanobj.City);
                        console.log("State: " + ReceiveCleanobj.State);
                        console.log("City: " + ReceiveCleanobj.City);
                        console.log("Zipcode: " + ReceiveCleanobj.Zipcode);
                        console.log("UserID: " + ReceiveCleanobj.UserID);
                        console.log("isNewUser: " + ReceiveCleanobj.isNewUser);
                        console.log("Package Count: " + packagesCount);
                        for (var i = 0; i < packagesCount; i++)
                        {         
                            console.log("Tracking#: " + ReceiveCleanobj.Packages[i].Trackingnumber);
                        }                         
                    }
                };
                // Start the connection.outgoing here
                $.connection.hub.start().done(function () { console.log("connected, Connection ID: " + $.connection.hub.id) });
                //reconnect after disconect
                $.connection.hub.disconnected(function () {
                    setTimeout(function () {
                        $.connection.hub.start();
                    }, 5000); // Restart connection after 5 seconds.
                });
            });
        };

        ko.applyBindings(viewModel);
           







        
        var canvascount = document.getElementsByTagName("canvas");
       
        
        for (var i = 0; i <= canvascount.length - 1; i++)
        {   var datachart =[];
        var data_TenantID = canvascount[i].getAttribute("data-tenantid");
       
                
     
        $.ajax({
            async: false,
            type: "GET",
            data:{TenantID: data_TenantID},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/Building/getRequestsType/",
            success: function(jsonData) {
               
                for(var j=0; j<jsonData.length; j++)
                {
                    //array of colors
                    var colors = ["#0000FF",
                                   "#8A2BE2",
                                   "#6495ED",
                                   "lightblue", 
                                   "lightgreen", 
                                   "orange",
                                   "yellow",
                                   "#32CD32",
                                   "#FF4500", 
                                   "#FF6347",
                                   "#008080",
                                   "#9ACD32",
                                   "#FFE4B5",
                                   "#FFE4E1",
                                   "#0000CD",
                                   "#9370DB",
                                   "#B0C4DE",
                                   "#7FFFD4"
                    ];                
                    var rand = Math.floor(Math.random()*colors.length);
                 
                    //Legend Data[].Key shows type name
                    //Legend: Data[].(type) show the count of the type
                    datachart.push({value:jsonData[j].AccessControl , color: colors[rand],label:  jsonData[j].key});    
                   
                }
                drawmychart(datachart);
             
               
            }
        });
          
            function drawmychart(data1){
                var options = { responsive: true }
                var myDoughnut = new Chart(document.getElementById("doughNutChartLoc" + data_TenantID).getContext("2d")).Pie(data1,options);
            }
        };
        //=====================Circle charts for the tenants ends==============================
      
        
    

        


       
      









    });
</script>

}