@model SecurityMonitor.Models.RepairManagement

@{
    ViewBag.Title = "RepairManagement";
    Layout = "~/Views/Shared/_LayoutTenant .cshtml";
}

@{
        List<SelectListItem> items = new List<SelectListItem>();
        items.Add(new SelectListItem { Text = "Assign to New", Value = "1" });

}

<!--nAV bAR-->
<div class="row">


    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 headerDefault">
        <ol class="breadcrumb" style="line-height:20px;" id="clientbreadcrumbid">
            <li>@Html.ActionLink("Home", "index", "Home", null, new { @class = "breadcrumblink" })</li>
            <li>@Html.ActionLink("Client's Page", "ClientHome", "building", null, new { @class = "breadcrumblink" })</li>
            <li>@Html.ActionLink("Client's Profile", "ClientProfile", "building", new { ClientID = @Model.building.ClientID }, new { @class = "breadcrumblink" })</li>
            <li> @Html.ActionLink((string)@Model.building.BuildingName, "BuildingProfile", "building", new { buildingID = @Model.building.ID }, new { @class = "breadcrumblink" })</li>
            <li>Repair Management</li>
        </ol>
    </div>
</div>
<div class="row ">

    <div class="box">
        <div class="container-4 col-lg-6 col-md-6 col-sm-6 col-xs-6 ">
            <input type="search" id="search" class=" form-control input-xs" placeholder="Start Typing..." @*data-bind="value:Search, valueUpdate:'afterkeydown'"*@ />

        </div>
    </div>
</div>

<div class="row ">

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 requestmanagementHeaderrows  ">
            <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1   " style="border-right:1px solid #808080;">
                Date
            </div>

            <div class="col-lg-1 col-md-112 col-sm-1 col-xs-1  " style="border-right:1px solid #808080;">
                Status
            </div>
            <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1  " style="border-right:1px solid #808080;">
                Urgency
            </div>
            <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1  " style="border-right:1px solid #808080;">
                Request#
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 repairmanagementdescription  " style="border-right:1px solid #808080;">
                Problem Description
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2  ">
                AssignTo
            </div>
        </div>
    </div>
</div>

<!--this are the rows-->
<div class="row " data-bind="foreach:RepairRequest">
    
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 requestmanagementrows hollow5 " data-toggle="modal" data-target="#myModal" data-bind="click:selectedRequest">
                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1   " data-bind="text:RequestedDate">
                        6/9/2015
                    </div>

                    <div class="col-lg-1 col-md-112 col-sm-1 col-xs-1  " data-bind="text:Status">
                        Open
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1  " data-bind="text:Urgency">
                        High
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1  " data-bind="text:RequestNumber">
                        692015355
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 repairmanagementdescription  " data-bind="text:Description">
                        Ceiling is coming down on us please send some one to fix it.
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2  ">
                        Kevin Sandiego
                    </div>
                </div>  
        </div>
    </div>


<!--Request Form-->
<div class="modal fade" id="myModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Repair Request Details</h4>
            </div>
            <div class="modal-body lightgrey">
                <div class="col-lg-12 col-md-12">
                <div data-bind="text:selectedRequestDate"></div>
                <div data-bind="text:selectedDescription"></div>
                <div data-bind="text:selectedStatus"></div>
                <div data-bind="text:selectedRequestNumber"></div>
                   
                </div>
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-left">
                    <hr/>
                    <h4>Assign To:</h4>

                </div>
                <div class="col-lg-12 col-md-12">

                    <ul class="nav nav-tabs">
                        <li role="presentation" class="active"><a href="#SBS" data-toggle="tab">Select Building Staff</a></li>
                        <li role="presentation"><a href="#NewContact" data-toggle="tab">New Contractor</a></li>
                        <li role="presentation"><a href="#SC" data-toggle="tab">Select Contractor</a></li>
                        
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade in active" id="SBS">
                           <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 nopadding">
                               @for (var i = 0; i < 10; i++)
                               {
                                <div class="sbsrows">
                                    <div class="col-lg-11 col-md-11 col-sm-10 col-xs-8 sbsrows_inside_left ">
                                        <span>Joe Doe</span>
                                    </div>
                                    <div class="col-lg-1 col-md-1 col-sm-2 col-xs-4 sbsrows_inside_right hollow5">
                                        <h4 class="assignto fa fa-hand-o-up fa-3x"></h4>
                                    </div>
                                </div>
                               }
                               

                           </div>

                            
                        </div>
                        <div class="tab-pane fade" id="NewContact">
                            Create New Contractor
                        </div>
                        <div class="tab-pane fade" id="SC">
                            Select Contrator
                        </div>
                    </div>


                                     
                    
                </div>
                <!--Form-->
                <div class="col-lg-12 col-md-12 blueDefault" data-bind="foreach:buildingUsers">
                     <div data-bind="text:BuildingUserName">

                     </div>   
                </div>
            
               </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default " data-dismiss="modal">Cancel</button>

                <button class="btn btn-info " type="button" data-dismiss="modal">Send Request</button>
            </div>
        </div>
    </div>
</div>



@section scripts
{

<script src="~/Scripts/jquery-ui-1.11.4.min.js"></script>
<script src="~/Scripts/knockout-3.1.0.js"></script>
    <script type="text/javascript">
       // alert("dss");
        $(function () {

            $('#NewContractor a').click(function (e) {
                e.preventDefault()
                $(this).tab('show')
            })


            var viewModel = function () {
                // =====year=======
                function YearC(value) {
                    var pattern = /Date\(([^)]+)\)/;
                    var results = pattern.exec(value);
                    var dt = new Date(parseFloat(results[1]));
                    return (dt.getFullYear());
                }
                // =====Month=======
                function MonthC(value) {
                    var pattern = /Date\(([^)]+)\)/;
                    var results = pattern.exec(value);
                    var dt = new Date(parseFloat(results[1]));
                    return (dt.getMonth());
                }
                // =====Day=======
                function DayC(value) {
                    var pattern = /Date\(([^)]+)\)/;
                    var results = pattern.exec(value);
                    var dt = new Date(parseFloat(results[1]));
                    return dt.getDate();

                }

                // =====Hour=======
                function HoursC(value) {
                    var pattern = /Date\(([^)]+)\)/;
                    var results = pattern.exec(value);l
                    var dt = new Date(parseFloat(results[1]));
                    return dt.getHours();
                }
                // =====Minutes=======
                function MinutesC(value) {
                    var pattern = /Date\(([^)]+)\)/;
                    var results = pattern.exec(value);
                    var dt = new Date(parseFloat(results[1]));
                    return dt.getMinutes();
                }

                var self = this;


                //this section belongs to the tabs
                self.applySBS = ko.observable(false);
                self.applysc = ko.observable(false);

                
                







                var items = ([{ Text: "Assign To New", Value: "1" }, { Text: "Assign To Existing", Value: "2" }, { Text: "Close Ticket", Value: "3" }]);
                
                self.itemsoptions = ko.observableArray(items);
                self.RepairRequest = ko.observableArray();
                self.value_changed = ko.observable();
                self.selectedRequestDate = ko.observable();
                self.selectedAssignto = ko.observable();
                self.selectedDescription = ko.observable();
                self.selectedID = ko.observable();
                self.selectedStatus = ko.observable();
                self.selectedRequestNumber = ko.observable();
                self.selectedCategory = ko.observable();
                self.selectedCName = ko.observable();
                self.selectedCEmail = ko.observable();
                self.selectedCphone = ko.observable();
                self.selectedPName = ko.observable();
                self.selectedPEmail = ko.observable();
                self.selectedPPhone = ko.observable();
                self.selectedPhotoURL = ko.observable();


                self.selectedRequest = function (value, event) {
                    
                    var myvalue = ko.toJSON(value);
                    var myjson = JSON.parse(myvalue);
                    self.selectedRequestDate(myjson.RequestedDate);
                    
                    self.selectedAssignto(myjson.RequestedDate);
                    self.selectedDescription(myjson.Description);
                    self.selectedID(myjson.ID);
                    self.selectedStatus(myjson.Status);
                    self.selectedRequestNumber(myjson.RequestNumber);


                    var updatedRequest =
                        {
                            selectedRequestDate: ko.observable(myjson.RequestedDate)
                            
                        }
                };
                
              
                self.buildingUsers = ko.observableArray();
                

                self.ListBuildingUsers = function ()
                {
                    $.ajaxSettings.traditional = true;
                    $.ajax(
                        {
                        type: "GET",
                        url: '/building/BuildingUsersList/',
                        data: { buildingID: "@Model.buildingID" },
                        dataType: "json",
                        success: function (data)
                        {
                            var jsonresult = JSON.stringify(data.Data);// Json.stringify make an object into a json string

                            var TrkPkgs = JSON.parse(jsonresult); //JSON.parse makes a json string into a json object example obj.FirstName
                            for (var i = 0; i < TrkPkgs.length; i++)
                            {

                               

                                self.buildingUsers.push({
                                    BuildingUserName: ko.observable("Fullname")

                                });
                            }
                        }
                    });
                


                };
              
               
                
                $.ajaxSettings.traditional = true;
                $.ajax({
                    type: "GET",
                    url: '/building/BuildingRepairResquest/',
                    data: { buildingID: "@Model.buildingID" },
                    dataType: "json",
                    success: function (data) {
                        self.RepairRequest.removeAll();
                        var jsonresult = JSON.stringify(data.Data);// Json.stringify make an object into a json string
                      
                        var TrkPkgs = JSON.parse(jsonresult); //JSON.parse makes a json string into a json object example obj.FirstName
                        for (var i = 0; i < TrkPkgs.length; i++) {
                         

                            var RDate = MonthC(TrkPkgs[i].RequestedDate) + "/" + DayC(TrkPkgs[i].RequestedDate) + "/" + YearC(TrkPkgs[i].RequestedDate);
                          
                            self.RepairRequest.push({
                                RequestedDate: ko.observable(RDate),
                                Assignto: ko.observableArray(items),
                                Description: TrkPkgs[i].Description,
                                ID: TrkPkgs[i].ID,
                                Status: TrkPkgs[i].Status,
                                RequestNumber: TrkPkgs[i].RequestNumber,                                
                                Category: TrkPkgs[i].Category,
                                PhotoUrl: TrkPkgs[i].PhotoUrl,
                                Urgency: TrkPkgs[i].Urgency,
                                CName : TrkPkgs[i].CName,
                                CEmail: TrkPkgs[i].CEmail,
                                CPhone: TrkPkgs[i].CPhone,
                                PName : TrkPkgs[i].PName,
                                PEmail: TrkPkgs[i].PEmail,
                                PPhone: TrkPkgs[i].PPhone

                            });
                        }
                    }
                });


                //when a selected value this will get the value related with the element
                self.value_changed.subscribe(function (value) {
                    var myvalue = ko.toJSON(value);
                    var myjson = JSON.parse(myvalue);


                    alert(myvalue);
                });
            };

            ko.applyBindings(viewModel);

        });




    </script>
    
    
    
    
}